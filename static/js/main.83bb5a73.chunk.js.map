{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/CounterButton.js","components/Header.js","components/Scroll.js","components/ErrorBoundary.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","CounterButton","updateCount","setState","state","count","nextProps","nextState","this","color","props","onClick","PureComponent","Header","Component","Scroll","style","overflowY","border","height","children","ErrorBoundary","hasError","error","info","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","console","log","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83bb5a73.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className= 'tc bg-light-green dib br3 pas3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\t// if(true) {\r\n\t// \tthrow new Error('ERROR!');\r\n\t// }\r\nreturn (\r\n\t<div>\r\n\t{\r\n\t\trobots.map((user, i) => { \r\n\t\t\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tkey= {robots[i].id}\r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t})\r\n\t}\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input\r\n\t\tclassName='pa3 ba b- -green bg-lightest-blue'\r\n\t\ttype = 'search'\r\n\t\tplaceholder='Search robotfriends'\r\n\t\tonChange = {searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox","import React, { PureComponent } from 'react';\r\n\r\nclass CounterButton extends PureComponent {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcount: 0\r\n\t\t}\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (this.state.count !== nextState.count) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\nupdateCount = () => {\r\n\tthis.setState(state => {\r\n\t\treturn { count: this.state.count + 1}\r\n\t})\r\n}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button color={this.props.color} onClick={this.updateCount}>\r\n\t\t\tCount: {this.state.count}\r\n\t\t\t</button>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn false;\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t<CounterButton color={'red'} />\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n//Every component of react have children\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px transparent', height: '500px' }}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n//In React 16, solves the problem if tere was an error,\r\n// there was no gracefully error handling method.\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true})\r\n\t}\t\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1> Oooops. That is not good</h1>\r\n\t\t}\r\n\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Header from  '../components/Header';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport { setSearchField, requestRobots  } from '../actions';\r\n//PROPS reads the properties that it receives and render something.\r\n//PROPS can never change\r\n//STATE is an object that describes your application \r\n//STATE are able to change\r\n\r\n//This is part of containers, / smart containers\r\n//they have state in them with lifecycle hooks\r\n//class sytax aswell\r\n//not a pure functions\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n// \tconstructor() {\r\n// super() //calls the constructor of the component\r\n// this.state = { //STATE can be change thus this becomes important to pass onto child\r\n// \trobots: [],\r\n// \t// searchField: ''\r\n// \t}\r\n// }\r\n\r\ncomponentDidMount() {\r\n\tthis.props.onRequestRobots();\r\n\t// fetch('https://jsonplaceholder.typicode.com/users')\r\n\t// .then(response => response.json())\r\n\t// .then(users => {this.setState({ robots: users})});\r\n}\r\n\r\n// onSearchChange = (event) => {\r\n// \tthis.setState({ searchField: event.target.value })\r\n// }\r\n\r\nrender() {\r\n\tconst { searchField, onSearchChange,robots, isPending } = this.props;\r\n\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t})\r\n\t return isPending ?\r\n\t\t<h1 className='tc'>Loading</h1> : // ':' alternative return statement\r\n\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t<Header />\r\n\t\t\t<SearchBox searchChange={onSearchChange}/> \r\n\t\t\t<Scroll> \r\n\t\t\t<ErrorBoundary>\r\n\t\t\t<CardList robots={filteredRobots} /> \r\n\t\t\t</ErrorBoundary>\r\n\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { CHANGE_SEARCH_FIELD,\r\nREQUEST_ROBOTS_PENDING,\r\nREQUEST_ROBOTS_SUCCESS,\r\nREQUEST_ROBOTS_FAILED } from './constants.js'\r\n\r\nexport const setSearchField = (text) => ({\r\ntype: 'CHANGE_SEARCH_FIELD',\r\npayload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_SEARCH_FIELD,\r\nREQUEST_ROBOTS_PENDING,\r\nREQUEST_ROBOTS_SUCCESS,\r\nREQUEST_ROBOTS_FAILED } from './constants.js'\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tconsole.log(action.type);\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\treturn Object.assign({}, state, {searchField: action.payload})\r\n\tdefault:\r\n\treturn state;\r\n\t}\r\n}\r\n\tconst initialStateRobots = {\r\n\t\tisPending: false,\r\n\t\trobots: [],\r\n\t\terror: ''\r\n\t}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\treturn Object.assign({}, state, { isPending: true})\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\treturn Object.assign({}, state, { error: action.payload, isPending: false })\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\t\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<App />\n\t</Provider>,  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}